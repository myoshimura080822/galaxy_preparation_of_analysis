<tool id="SummaryOfSailfishInfo" name="SummaryOfSailfishInfo" version="0.01">


<command interpreter="python">

        SummaryOfSailfishInfo.py --script_path "$runMe" --interpreter "Rscript" 
            --tool_name "SummaryOfSailfishInfo" --input_tab "$input1" --output_dir "$html_file.files_path" --output_tab "$tab_file" --output_html "$html_file" --make_HTML "yes"
</command>
<inputs>
<param name="input1"  type="data" format="None" label="Select a suitable input file from your history"/> 
<param name="job_name" type="text" label="Supply a name for the outputs to remind you what they contain" value="SummaryOfSailfishInfo"/> 

</inputs>
<outputs>
 <data format="tabular" name="tab_file" label="${job_name}"/>
 <data format="html" name="html_file" label="${job_name}.html"/>
</outputs>
<configfiles>
<configfile name="runMe">
library("dplyr")
library("plyr")
library("tidyr")
library("stringr")
library("ggplot2")

ourargs = commandArgs(TRUE)
inf = ourargs[1]
outf = ourargs[2]
cat("input file name:");inf
cat("output file name:");outf
cat("\n")

path_list &lt;- read.table(inf, header=T, row.names=1, sep="\t")
head(path_list)

data &lt;- ldply(
  as.character(path_list[["file_name"]]),
  function(x){
    data.frame(filename=subset(path_list, file_name==x, select=sample_name),
               str_split_fixed(matrix(scan(x, what = character(), sep = "\n", nlines = 4), 4, byrow=T), "\\t", 2))
  }
)  %&gt;% spread(sample_name, X2)

rownames(data) &lt;- data\$X1
data &lt;- data[, colnames(data) != "X1"]

dset_name = unlist(colnames(data))
total_reads = as.numeric(as.character(unname(unlist(data[3,]))))
mapped_ratio = as.numeric(as.character(unname(unlist(data[2,]))))
outp = data.frame(dset_name,total_reads,mapped_ratio)
outp\$cell_type &lt;- str_split_fixed(outp\$dset_name, "_", 3)[,1]
outp\$well &lt;- str_split_fixed(outp\$dset_name, "_", 3)[,3]
head(outp)

CIset &lt;- function(y,conf){
  data.frame(upper = mean(y)+qt(conf,length(y)-1)*sd(y)/sqrt(length(y)),
             lower = mean(y)-qt(conf,length(y)-1)*sd(y)/sqrt(length(y))
             )
}
ciset &lt;- CIset(outp\$mapped_ratio, 0.99)
lower &lt;- round(as.numeric(ciset\$lower,2),2)

ggplot(outp, aes(dset_name, mapped_ratio)) +
  layer(data=outp, 
        mapping=aes(x=dset_name, y=1, fill=cell_type), 
        geom="bar", stat="identity", position="identity", alpha=0.25) +
  geom_bar(alpha=0.7, aes(fill=cell_type), stat="identity") +
  ylim(0, 1) +
  xlab("Sample")+ylab("Mapped Ratio") +
  scale_x_discrete(labels=outp\$well) + 
  theme(axis.text.x=element_text(size=8, angle=90)) + 
  geom_text(aes(label=ifelse(outp\$mapped_ratio &gt; lower, "", as.character(round(outp\$mapped_ratio, 2)))), size=3, hjust=0.0, vjust=1.0)

ggsave(file="sailfish_result.png", width=12, height=5, dpi=100)
write.table(outp, outf, quote=F, sep="\t", append=F)

cat("....All Done. End of Script\n")
</configfile>
</configfiles>


        <tests>
        <test>
        <param name="input1" value="SummaryOfSailfishInfo_test1_input.xls" ftype="None"/>
        <param name="job_name" value="test1"/>
        <param name="runMe" value="$runMe"/>
        <output name="tab_file" file="SummaryOfSailfishInfo_test1_output.xls" ftype="tabular"/>
        </test>
        </tests>
        

<help>

**What it Does**

**Attribution**
This Galaxy tool was created by admin@galaxy.org at 06/05/2015 08:31:17
using the Galaxy Tool Factory.

See https://bitbucket.org/fubar/galaxytoolfactory for details of that project
Please cite: Creating re-usable tools from scripts: The Galaxy Tool Factory. Ross Lazarus; Antony Kaspi; Mark Ziemann; The Galaxy Team. 
Bioinformatics 2012; doi: 10.1093/bioinformatics/bts573

</help>
<citations>
    
    <citation type="doi">10.1093/bioinformatics/bts573</citation>
</citations>
</tool>

