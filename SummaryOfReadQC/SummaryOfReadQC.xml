<tool id="SummaryOfReadQC" name="SummaryOfReadQC" version="0.01">


<command interpreter="python">

        SummaryOfReadQC.py --script_path "$runMe" --interpreter "Rscript" --tool_name "SummaryOfReadQC" --input_tab "$input1" --output_dir "$html_file.files_path" --output_tab "$tab_file" --output_html "$html_file" --make_HTML "yes" 
</command>
<inputs>
    <param name="input1"  type="data" format="None" label="Select a suitable input file from your history"/> 
    <param name="job_name" type="text" label="Supply a name for the outputs to remind you what they contain" value="SummaryOfReadQC"/> 
</inputs>
<outputs>
    <data format="tabular" name="tab_file" label="${job_name}"/>
    <data format="html" name="html_file" label="${job_name}.html"/>
</outputs>
<configfiles>
<configfile name="runMe">
library("dplyr")
library("plyr")
library("tidyr")
library("stringr")
library("ggplot2")

ourargs = commandArgs(TRUE)
inf = ourargs[1]
outf = ourargs[2]
cat("input file name:");inf
cat("output file name:");outf
cat("\n")

path_list &lt;- read.table(inf, header=T, row.names=1, sep="\t")
head(path_list)

data &lt;- ldply(
  as.character(path_list[["file_name"]]),
  function(x){
    data.frame(sample_name = subset(path_list, file_name == x, select = sample_name),
               str_split_fixed(matrix(scan(x, what = character(), sep = "\n", nlines = 7, skip = 3), 7, byrow=T), "\\t", 2))
  }
) %&gt;% spread(sample_name,X2)

rownames(data) &lt;- sub(" ", "_", data\$X1)
data &lt;- data[, colnames(data) != "X1"]

#file_name = str_sub(as.character(unname(unlist(data["Filename",]))), start = 1, end = 17)
file_name = unlist(colnames(data))
total_seq = as.numeric(as.character(unname(unlist(data["Total_Sequences",]))))
per_GC = as.numeric(as.character(unname(unlist(data["%GC",]))))
outp &lt;- data.frame(file_name,total_seq,per_GC)

outp\$cell_type &lt;- str_split_fixed(outp\$file_name, "_", 3)[,1]
outp\$well &lt;- str_split_fixed(outp\$file_name, "_", 3)[,3]
summary(outp)
cat("\n")

CIset &lt;- function(x, y, g, w, conf){
  data.frame(x=x, y=y, cell_type=g, well=w,
             upper = mean(y)+qt(conf,length(y)-1)*sd(y)/sqrt(length(y)),
             lower = mean(y)-qt(conf,length(y)-1)*sd(y)/sqrt(length(y)))
}

plot_tseq &lt;- CIset(outp\$file_name, log10(outp\$total_seq), outp\$cell_type, outp\$well, 0.99)

plot_t &lt;- ggplot(plot_tseq, aes(x=x,y=y)) +
  geom_point(size=3, alpha=0.7, aes(colour=cell_type)) +
  geom_text(aes(label=ifelse(y&lt;upper+0.1 &amp; y&gt;lower-0.1, "", as.character(plot_tseq\$well))), size=4, hjust=0.0, vjust=1.0) +
  geom_smooth(method="lm", se=FALSE, aes(group=cell_type)) +
  geom_ribbon(aes(ymin=lower, ymax=upper, group=cell_type, fill=cell_type), alpha=0.25) +
  scale_y_continuous(limits=c(min(plot_tseq\$y) -0.5, max(plot_tseq\$y) +0.5)) +
  xlab("Sample")+ylab("TotalSeq(log10)")+theme(axis.text.x=element_blank())

plot_gc &lt;- ggplot(outp, aes(file_name,per_GC)) +
  geom_bar(alpha=0.7, aes(fill=cell_type), stat="identity") +
  ylim(0, 100) +
  xlab("Sample")+ylab("%GC") +
  scale_x_discrete(labels=outp\$well) + 
  theme(axis.text.x=element_text(size=8, angle=90))

ggsave(file="fastqc_totalseq.png", plot=plot_t, width=12, height=5, dpi=100)
ggsave(file="fastqc_perGC.png", plot=plot_gc, width=12, height=5, dpi=100)

write.table(outp, outf, quote=F, sep="\t", row.names=F, append=F)

cat("....All Done. End of Script\n")
</configfile>
</configfiles>


        <tests>
        <test>
        <param name="input1" value="SummaryOfReadQC_test1_input.xls" ftype="None"/>
        <param name="job_name" value="test1"/>
        <param name="runMe" value="$runMe"/>
        <output name="tab_file" file="SummaryOfReadQC_test1_output.xls" ftype="tabular"/>
        </test>
        </tests>
        

<help>

**What it Does**

**Attribution**
This Galaxy tool was created by admin@galaxy.org at 04/05/2015 11:13:46
using the Galaxy Tool Factory.

See https://bitbucket.org/fubar/galaxytoolfactory for details of that project
Please cite: Creating re-usable tools from scripts: The Galaxy Tool Factory. Ross Lazarus; Antony Kaspi; Mark Ziemann; The Galaxy Team. 
Bioinformatics 2012; doi: 10.1093/bioinformatics/bts573

</help>
<citations>
    
    <citation type="doi">10.1093/bioinformatics/bts573</citation>
</citations>
</tool>

