<tool id="CorrAndClusterForLogCountData" name="CorrAndClusterForLogCountData" version="0.01">
<description>assessing correlations and hierarchical cluster analysis for count data</description>

<command interpreter="python">

        CorrAndClusterForLogCountData.py --script_path "$runMe" --interpreter "Rscript" 
            --tool_name "CorrAndClusterForLogCountData" --input_tab "$input1"  --input_int "$input2" --output_dir "$html_file.files_path" --output_tab "$tab_file" --output_html "$html_file" --make_HTML "yes" 
</command>
<inputs>
<param name="input1"  type="data" format="tabular" label="Select a suitable input file from your history"/> 
<param name="input2"  type="text" label="Please input a number of cell-name index in column-name(separated '_')" value="1"/>
<param name="job_name" type="text" label="Supply a name for the outputs to remind you what they contain" value="CorrAndClusterForLogCountData"/> 
</inputs>
<outputs>
 <data format="tabular" name="tab_file" label="${job_name} on ${on_string}_correlation coefficient"/>
 <data format="html" name="html_file" label="${job_name} on ${on_string}_output.html"/>
</outputs>
<configfiles>
<configfile name="runMe">
library("matrixStats")
library("stringr")
library("pvclust")
library("ggplot2")
library(lattice)

cat("CorrAndClusterForLogCountData Started......\n")
cat("\n")

ourargs = commandArgs(TRUE)
inf = ourargs[1]
cell_idx = ourargs[2]
outf = ourargs[3]
cat("input file name:");inf
cat("cell name index: ");cell_idx
cell_idx = as.integer(cell_idx)
cat("output file name(1):");outf
cat("\n")

outp = read.table(inf, sep="\t", comment.char = "", header=T)
rownames(outp) = outp[,1]
outp = outp[, -1]
outp = outp[, order(names(outp))]
celltype = as.data.frame(str_split(colnames(outp), "_"))
celltype = factor(sort(unname(unlist(celltype[cell_idx,]))))

matrix = data.matrix(outp)
idx = rowVars(matrix) == 0
fmatrix = matrix[!idx,]
fmatrix = log10(fmatrix + 1)
fmatrix = apply(fmatrix,2,function(x){ifelse(is.nan(x), 0, x)})
fdata = data.frame(t(fmatrix))
nrow(fdata);ncol(fdata)
fdata\$celltype = as.character(celltype)

CIset = function(x, y, conf){
  data.frame(x=x, y=y,
             upper = mean(y)+qt(conf,length(y)-1)*sd(y)/sqrt(length(y)),
             lower = mean(y)-qt(conf,length(y)-1)*sd(y)/sqrt(length(y)))
}

count = 0
Plot_cor = function(celltype, fdata){
  nrow(fdata);nrow(fdata)
  cor_data= data.frame(t(data.matrix(fdata[, colnames(fdata) != "celltype"])))
  ret_cor = cor(cor_data)
  write.table(ret_cor, outf, quote=FALSE, sep="\t")

  ret_cor_m = data.frame(Means=rowMeans(ret_cor))
  ret_cor_m_ci = CIset(rownames(ret_cor_m), round(ret_cor_m\$Means, digits=3), 0.99)

  plot_cor = ggplot(ret_cor_m_ci, aes(x=x,y=y)) +
  geom_point(size=3, alpha=0.7) +
  geom_text(aes(label=ifelse(y&lt;upper &amp; y&gt;lower, "", as.character(y))), size=4, hjust=0.0, vjust=1.0) +
  geom_smooth(method="lm", se=FALSE, aes(group=1)) +
  geom_ribbon(aes(ymin=lower, ymax=upper, group=1), alpha=0.25) +
  scale_y_continuous(limits=c(min(ret_cor_m_ci\$y) -0.1, max(ret_cor_m_ci\$y) +0.1)) +
  theme(axis.text.x=element_text(size=8, angle=90)) +
  xlab("Sample")+ylab("Cor Means")

  fname = "corr_mean_plot.png"
  ggsave(file=fname, plot=plot_cor, width=16, height=4, dpi=100)

  png("corr_heatmap.png", width=1200, height=1200)
  print(levelplot(ret_cor, col.regions=heat.colors, xlab="", ylab="", scales=list(x=list(rot=90))))
  dev.off()
}

Plot_cor(celltype, fdata)

d = dist(fdata[, colnames(fdata) != "celltype"])
result = pvclust(data.matrix(d), method.dist="euclidean", method.hclust="ward", nboot=1000)
png("output_pvclust_result.png", width=1600, height=400)
plot(result)
pvrect(result, alpha=.95)
dev.off()
</configfile>
</configfiles>


        <tests>
        <test>
        <param name="input1" value="CorrAndClusterForLogCountData_test1_input.xls" ftype="tabular"/>
        <param name="job_name" value="test1"/>
        <param name="runMe" value="$runMe"/>
        <output name="tab_file" file="CorrAndClusterForLogCountData_test1_output.xls" ftype="tabular"/>
        </test>
        </tests>
        

<help>

This tool for produce correlations and assessing the uncertainty in hierarchical cluster analysis for count data.

**Attribution**
This Galaxy tool was created by mika.yoshimura@riken.jp at 03/06/2015 11:30:14
using the Galaxy Tool Factory.

See https://bitbucket.org/fubar/galaxytoolfactory for details of that project
Please cite: Creating re-usable tools from scripts: The Galaxy Tool Factory. Ross Lazarus; Antony Kaspi; Mark Ziemann; The Galaxy Team. 
Bioinformatics 2012; doi: 10.1093/bioinformatics/bts573


</help>
<citations>
    
    <citation type="doi">10.1093/bioinformatics/bts573</citation>
</citations>
</tool>
